service: docx-poc

provider:
  name: aws
  runtime: python3.7
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource: '*'
        - Effect: Allow
          Action:
            - sqs:DeleteMessage
            - sqs:ReceiveMessage
            - sqs:SendMessage
          Resource: '*'

functions:
  docxGenerate:
    handler: docxMultithreadingHandler.docxGenerate
    timeout: 900
    events:
      - http:
          cors: true
          method: post
          path: /poc/docx-poc/generate

  trigger:
    handler: docxMultithreadingHandler.trigger
    # reservedConcurrency: 10
    timeout: 850
    memorySize: 10240
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PocQueue
              - Arn
          batchSize: 1

plugins:
  - serverless-python-requirements

resources:
  Resources:
    PocDocx:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName : poc-docx
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256

    PocQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: poc-queue.fifo
        VisibilityTimeout: 850
        FifoQueue: true
        MessageRetentionPeriod: 7200
        ReceiveMessageWaitTimeSeconds: 20
        ContentBasedDeduplication: true
        # KmsMasterKeyId: alias/aws/sqs